// <auto-generated />
using System;
using ExamProgramme.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamProgramme.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExamProgramme.Models.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<int>("PupilId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("PupilId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 6, 2, 1, 0, 46, 457, DateTimeKind.Local).AddTicks(1259),
                            Grade = 5,
                            LessonId = 1,
                            PupilId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 6, 2, 1, 0, 46, 457, DateTimeKind.Local).AddTicks(1269),
                            Grade = 5,
                            LessonId = 1,
                            PupilId = 2
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 6, 2, 1, 0, 46, 457, DateTimeKind.Local).AddTicks(1270),
                            Grade = 4,
                            LessonId = 1,
                            PupilId = 3
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2023, 6, 2, 1, 0, 46, 457, DateTimeKind.Local).AddTicks(1271),
                            Grade = 4,
                            LessonId = 1,
                            PupilId = 4
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2023, 6, 2, 1, 0, 46, 457, DateTimeKind.Local).AddTicks(1272),
                            Grade = 5,
                            LessonId = 1,
                            PupilId = 5
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2023, 6, 2, 1, 0, 46, 457, DateTimeKind.Local).AddTicks(1273),
                            Grade = 5,
                            LessonId = 2,
                            PupilId = 1
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2023, 6, 2, 1, 0, 46, 457, DateTimeKind.Local).AddTicks(1274),
                            Grade = 5,
                            LessonId = 2,
                            PupilId = 2
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2023, 6, 2, 1, 0, 46, 457, DateTimeKind.Local).AddTicks(1275),
                            Grade = 4,
                            LessonId = 2,
                            PupilId = 3
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2023, 6, 2, 1, 0, 46, 457, DateTimeKind.Local).AddTicks(1276),
                            Grade = 4,
                            LessonId = 2,
                            PupilId = 4
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2023, 6, 2, 1, 0, 46, 457, DateTimeKind.Local).AddTicks(1277),
                            Grade = 5,
                            LessonId = 2,
                            PupilId = 5
                        },
                        new
                        {
                            Id = 11,
                            Date = new DateTime(2023, 6, 2, 1, 0, 46, 457, DateTimeKind.Local).AddTicks(1278),
                            Grade = 5,
                            LessonId = 3,
                            PupilId = 1
                        },
                        new
                        {
                            Id = 12,
                            Date = new DateTime(2023, 6, 2, 1, 0, 46, 457, DateTimeKind.Local).AddTicks(1279),
                            Grade = 5,
                            LessonId = 3,
                            PupilId = 2
                        },
                        new
                        {
                            Id = 13,
                            Date = new DateTime(2023, 6, 2, 1, 0, 46, 457, DateTimeKind.Local).AddTicks(1280),
                            Grade = 4,
                            LessonId = 3,
                            PupilId = 3
                        },
                        new
                        {
                            Id = 14,
                            Date = new DateTime(2023, 6, 2, 1, 0, 46, 457, DateTimeKind.Local).AddTicks(1281),
                            Grade = 4,
                            LessonId = 3,
                            PupilId = 4
                        },
                        new
                        {
                            Id = 15,
                            Date = new DateTime(2023, 6, 2, 1, 0, 46, 457, DateTimeKind.Local).AddTicks(1282),
                            Grade = 5,
                            LessonId = 3,
                            PupilId = 5
                        });
                });

            modelBuilder.Entity("ExamProgramme.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<string>("LessonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 3,
                            LessonName = "Riyaziyyat",
                            TeacherName = "Gunay",
                            TeacherSurname = "Ibrahimova"
                        },
                        new
                        {
                            Id = 2,
                            Class = 1,
                            LessonName = "Ana dili",
                            TeacherName = "Aza",
                            TeacherSurname = "Aliyev"
                        },
                        new
                        {
                            Id = 3,
                            Class = 3,
                            LessonName = "Ingilis dili",
                            TeacherName = "Jale",
                            TeacherSurname = "Xasiyeva"
                        },
                        new
                        {
                            Id = 4,
                            Class = 3,
                            LessonName = "Informatika",
                            TeacherName = "Ali",
                            TeacherSurname = "Mamedov"
                        });
                });

            modelBuilder.Entity("ExamProgramme.Models.Pupil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pupils");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 3,
                            Name = "Cavid",
                            Surname = "Alagezov"
                        },
                        new
                        {
                            Id = 2,
                            Class = 2,
                            Name = "Ali",
                            Surname = "Farzaliyev"
                        },
                        new
                        {
                            Id = 3,
                            Class = 1,
                            Name = "Vali",
                            Surname = "Mamedov"
                        },
                        new
                        {
                            Id = 4,
                            Class = 1,
                            Name = "Fidan",
                            Surname = "Alagezova"
                        },
                        new
                        {
                            Id = 5,
                            Class = 3,
                            Name = "Shefa",
                            Surname = "Quliyev"
                        });
                });

            modelBuilder.Entity("ExamProgramme.Models.Exam", b =>
                {
                    b.HasOne("ExamProgramme.Models.Lesson", "Lesson")
                        .WithMany("Exams")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamProgramme.Models.Pupil", "Pupil")
                        .WithMany("Exams")
                        .HasForeignKey("PupilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Pupil");
                });

            modelBuilder.Entity("ExamProgramme.Models.Lesson", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("ExamProgramme.Models.Pupil", b =>
                {
                    b.Navigation("Exams");
                });
#pragma warning restore 612, 618
        }
    }
}
